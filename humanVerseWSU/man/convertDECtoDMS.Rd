% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions-latlong.R
\name{convertDECtoDMS}
\alias{convertDECtoDMS}
\title{convertDECtoDMS}
\usage{
convertDECtoDMS(
  decimal = 105.38,
  which = "latitude",
  return = "list",
  include.direction = TRUE,
  use.decimal.seconds = TRUE
)
}
\arguments{
\item{decimal}{lat/long in decimal form}

\item{which}{is it "latitude" or "longitude" ... matters for c("N","S","E","W")}

\item{return}{one of :: c("list","measurements","UTF8")}

\item{include.direction}{if TRUE, string returns will have direction appended to end}

\item{use.decimal.seconds}{if TRUE, the seconds are not "floored", but the entire value is used ...}
}
\value{
either a list or a string based on `return` option; default is "list"
}
\description{
convertDECtoDMS
}
\examples{
convertDECtoDMS(3.1415926535897932384626, "latitude");
convertDECtoDMS(-3.1415926535897932384626, "la");


convertDECtoDMS(3.1415926535897932384626, "latitude", "measurements");
measurements::conv_unit("3 8 29.7335529232441", "deg_min_sec", "dec_deg");
measurements::conv_unit(3.1415926535897932384626, "dec_deg", "deg_min_sec");

convertDECtoDMS(-3.1415926535897932384626, "longitude");
convertDECtoDMS(-3.1415926535897932384626, "longitude", "UTF8");
convertDECtoDMS(3.1415926535897932384626, "lo");

# convertDECtoDMS(-31.0125,"longitude","UTF8"); # removed, as it breaks R to source it ...

convertDECtoDMS( convertDMStoDEC(30,60,45,"N"), "latitude",
                                               return = "MEAS", include.direction=FALSE);
convertDECtoDMS( convertDMStoDEC(30,60,45,"N"), "latitude",
                                               return = "MEAS", include.direction=TRUE);
convertDECtoDMS( convertDMStoDEC(-30,60,45,"N"), "latitude",
                                               return = "MEAS", include.direction=FALSE);
convertDECtoDMS( convertDMStoDEC(-30,60,45,"N"), "latitude",
                                               return = "MEAS", include.direction=TRUE);
}
\seealso{
Other LatLong: 
\code{\link{buildBoundingBoxFromRadiusAndGivenLatitudeLongitude}()},
\code{\link{convertDMStoDEC}()},
\code{\link{parseDMSfromFormat}()}
}
\concept{LatLong}
